{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/day-plan/day-plan.component.ts","webpack:///src/app/day-plan/day-plan.component.html","webpack:///src/app/services/plan-storage.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/polyfills.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","days","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DayPlanComponent","dragulaService","planStorageService","newActivityName","groupName","isDragging","dragulaOptions","removeOnSpill","ignoreInputTextSelection","moves","el","source","handle","sibling","classList","contains","invalid","createGroup","dayPlan","getDayPlan","weekDay","drag","subscribe","val","dragend","updateDayPlan","newActivity","activities","push","save","saveDayPlan","appToken","getDefaultPlans","PlanStorageService","getDayPlanFromStorage","day","storeDayPlan","storedItem","localStorage","getItem","JSON","parse","setItem","stringify","environment","production","bootstrapModule","window","global"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works!';\r\n  days = ['Monday', 'Tuesday', 'Wednesday'];//, 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n}\r\n","<div class=\"container-fluid\" style=\"height: 100%;\">\r\n  <div class=\"row\" style=\"height: 100%;\">\r\n    <div [className]=\"'day-column col-xs-' + (12 / days.length)\"  *ngFor=\"let day of days\">\r\n      <h2>{{day}}</h2>\r\n      <app-day-plan [weekDay]=\"day\"></app-day-plan>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DayPlanComponent } from './day-plan/day-plan.component';\r\n\r\nimport { PlanStorageService } from './services/plan-storage.service';\r\nimport { DragulaService } from 'ng2-dragula';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DayPlanComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    DragulaModule\r\n  ],\r\n  providers: [PlanStorageService, DragulaService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { PlanStorageService, IDayPlan, IActivity } from './../services/plan-storage.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { DragulaService } from 'ng2-dragula';\r\n\r\n@Component({\r\n  selector: 'app-day-plan',\r\n  templateUrl: './day-plan.component.html',\r\n  styleUrls: ['./day-plan.component.css'],\r\n})\r\nexport class DayPlanComponent implements OnInit {\r\n  @Input()\r\n  weekDay: string;\r\n\r\n  dayPlan: IDayPlan;\r\n  newActivityName = '';\r\n  groupName = 'plan-bag';\r\n\r\n  isDragging = false;\r\n\r\n  dragulaOptions = {\r\n    removeOnSpill: true,\r\n    ignoreInputTextSelection: false,\r\n    moves: (el, source, handle, sibling) => {\r\n      return !el.classList.contains('new-plan-activity');\r\n    },\r\n    invalid: (el) => {\r\n      return el.classList.contains('new-plan-activity');\r\n    }\r\n  };\r\n\r\n  constructor(private dragulaService: DragulaService, private planStorageService: PlanStorageService) {\r\n    try {\r\n      this.dragulaService.createGroup(this.groupName, this.dragulaOptions);\r\n    } catch {\r\n\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dayPlan = this.planStorageService.getDayPlan(this.weekDay);\r\n\r\n    this.dragulaService.drag(this.groupName).subscribe((val) => {\r\n      this.isDragging = true;\r\n    });\r\n\r\n    this.dragulaService.dragend(this.groupName).subscribe((val) => {\r\n      this.isDragging = false;\r\n\r\n      this.updateDayPlan();\r\n    });\r\n  }\r\n\r\n  addNewActivity() {\r\n    const newActivity = <IActivity>{\r\n      title: this.newActivityName\r\n    };\r\n\r\n    this.dayPlan.activities.push(newActivity);\r\n    this.newActivityName = '';\r\n\r\n    this.save();\r\n  }\r\n\r\n  updateDayPlan() {\r\n    this.save();\r\n  }\r\n\r\n  private save() {\r\n    this.planStorageService.saveDayPlan(this.dayPlan);\r\n  }\r\n}\r\n","<div class=\"wrapper container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"container\" [dragula]='groupName' [dragulaModel]='dayPlan.activities' [ngClass]=\"{'full-size': isDragging}\">\r\n      <div class=\"row plan-activity\" *ngFor=\"let activity of dayPlan.activities\">\r\n        <input type=\"text\" [(ngModel)]=\"activity.title\" (change)=\"updateDayPlan()\" [ngClass]=\"{disabled: isDragging}\">\r\n      </div>\r\n    </div>\r\n    <div class=\"container\" *ngIf=\"!isDragging\">\r\n      <div class=\"row plan-activity new-plan-activity\">\r\n        <input type=\"text\" [(ngModel)]=\"newActivityName\" (change)=\"addNewActivity()\" placeholder=\"New activity...\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\nexport interface IActivity {\r\n  title: string;\r\n}\r\n\r\nexport interface IDayPlan {\r\n  day: string;\r\n  activities: IActivity[];\r\n}\r\n\r\nconst appToken = 'unique-app-token_week-plan';\r\n\r\nfunction getDefaultPlans(): IActivity[] {\r\n  return [{\r\n    title: 'First activity'\r\n  }, {\r\n    title: 'Second activity'\r\n  }];\r\n};\r\n\r\n@Injectable()\r\nexport class PlanStorageService {\r\n  constructor() { }\r\n\r\n  getDayPlan(weekDay: string): IDayPlan {\r\n    const activities = this.getDayPlanFromStorage(weekDay) || getDefaultPlans();\r\n\r\n    return {\r\n      day: weekDay,\r\n      activities: activities\r\n    };\r\n  }\r\n\r\n  saveDayPlan(dayPlan: IDayPlan) {\r\n    this.storeDayPlan(dayPlan);\r\n  }\r\n\r\n  private getDayPlanFromStorage(weekDay: string): IActivity[] {\r\n    const storedItem = localStorage.getItem(appToken + '|' + weekDay);\r\n    return storedItem && JSON.parse(storedItem);\r\n  }\r\n\r\n  private storeDayPlan(dayPlan: IDayPlan) {\r\n    localStorage.setItem(appToken + '|' + dayPlan.day, JSON.stringify(dayPlan.activities));\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","// This file includes polyfills needed by Angular and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n// import 'core-js/es6/reflect';\r\n\r\n// import 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n(window as any).global = window;\r\n"]}